' openapi-class-model
' Copyright 2023 Akamai Technologies, Inc.

' This work is licensed under the Creative Commons
' Attribution-ShareAlike 4.0 International License.
' To view a copy of this license, visit
' http://creativecommons.org/licenses/by-sa/4.0/
' or send a letter to Creative Commons, PO Box 1866,
' Mountain View, CA 94042, USA.

' Unless required by applicable law or agreed to in
' writing, software distributed under the License is
' distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
' CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing
' permissions and limitations under the License.

@startuml

hide empty members

!define ENUM #Khaki
!define ROOT #STRATEGY
!define ABSTRACT #TECHNOLOGY
!define SCHEMA <color:blue>schema</color>
!define REF <color:green>$ref</color>
!define OPENAPI color:Brown
!define ADVANCED color:gray
!define ANY //Any//
!define STRING //string//
!define INTEGER //integer//
!define NUMBER //number//
!define BOOLEAN //boolean//

title JSON Schema Class Model for OpenAPI (Swagger) 3\n%date("dd MMM yyyy")

class rootSchema ROOT {
  **$schema**: STRING
  **$id**: STRING
  {field} **$defs**: map(**{schemaName}**, SCHEMA)
}

class "REF" as ref {
}

abstract class "SCHEMA" as schema ABSTRACT {
  **title**: STRING
  **description**: STRING
  **default**: ANY
  **examples**: ANY[]
  **$comment**: STRING
  **type**: type | type[]
  **enum**: ANY[]
  **const**: ANY
  <ADVANCED>**contentMediaType**: STRING
  <ADVANCED>**contentEncoding**: STRING
  <ADVANCED>**contentSchema**
  {field} **allOf**: ( SCHEMA | REF )[]
  {field} **anyOf**: ( SCHEMA | REF )[]
  {field} **oneOf**: ( SCHEMA | REF )[]
  .. <OPENAPI>//Always available in OpenAPI// ..
  {field} **readOnly**: BOOLEAN
  {field} **writeOnly**: BOOLEAN
  {field} **deprecated**: BOOLEAN
  .. <OPENAPI>//Additional fields defined by OpenAPI// ..
  <OPENAPI>**xml**: xml
  <OPENAPI>**externalDocs**: externalDocs
  <OPENAPI>**example**: example
  <OPENAPI>{field} **nullable**: BOOLEAN //(Not supported from OpenAPI 3.1)//
}

enum "type" as schemaType ENUM {
  **string**
  **number**
  **integer**
  **object**
  **array**
  **boolean**
  {field} **null** //(Supported from OpenAPI 3.1)//
}

class stringSchema {
  **maxLength**: INTEGER
  **minLength**: INTEGER
  **pattern**: //regex//
  **format**: format
}

enum "format" as formatType ENUM {
  **date-time** //ex: 2018-11-13T20:20:39+00:00//
  **time** //ex: 20:20:39+00:00//
  **date** //ex: 2018-11-13//
  **duration** //ex: P3D//
  **email** //ex: joe@example.com//
  **idn-email** //ex: יוסף@example.com//
  **hostname** //ex: secretserver.example.com//
  **idn-hostname** //ex: שרתסודי.example.com//
  **ipv4** //ex: 198.41.0.4//
  **ipv6** //ex: 2001:503:ba3e::2:30//
  **uuid** //ex: 3e4666bf-d5e5-4aa7-b8ce-cefe41c7568a//
  **uri** //ex: foo:~//example.com:8042/over/there?name=ferret#nose//
  **uri-reference** ///over/there?name=ferret#nose//
  **iri** //ex: foo:~//דוגמה.com:8042/over/there?name=ferret#nose//
  **iri-reference** //ex: /over/there?name=סמור#nose//
  **uri-template** //ex: http:~//example.com/people/{firstName}-{lastName}/SSN//
  **json-pointer** //ex: /books/1/author//
  **relative-json-pointer** //ex: 1/author//
  **regex** //ex: 192\.168\.1\.\d{1,3}//
  .. <OPENAPI>//Additional format defined by OpenAPI// ..
  <OPENAPI>**password** //A hint to UIs to obscure input//
}

enum "format" as numberFormatType ENUM {
  <OPENAPI>//Number formats defined by OpenAPI//
  <OPENAPI>**float**
  <OPENAPI>**double**
}

enum "format" as integerFormatType ENUM {
  <OPENAPI>//Integer formats defined by OpenAPI//
  <OPENAPI>**int32**
  <OPENAPI>**int64**
}

abstract class numericSchema ABSTRACT {
  **multipleOf**: NUMBER
  **maximum**: NUMBER
  **exclusiveMaximum**: NUMBER
  **minimum**: NUMBER
  **exclusiveMinimum**: NUMBER
}

class numberSchema {
  **format**: format
}

class integerSchema {
  **format**: format
}

class objectSchema {
  **properties**: properties
  <ADVANCED>**patternProperties**: patternProperties
  **additionalProperties**: BOOLEAN | SCHEMA | REF
  **unevaluatedProperties**: BOOLEAN | SCHEMA | REF
  **required**: STRING[]
  **dependentRequired**: objectSchema
  <ADVANCED>**propertyNames**: propertyNames
  **maxProperties**: INTEGER
  **minProperties**: INTEGER
  <ADVANCED>**dependentRequired**: dependentRequired
  <ADVANCED>**dependentSchemas**: dependentSchemas
  <ADVANCED>**if**
  <ADVANCED>**then**
  <ADVANCED>**else**
  .. <OPENAPI>//Additional field defined by OpenAPI// ..
  <OPENAPI>**discriminator**: discriminator
}

class properties {
  **{propertyName}**: SCHEMA | REF
}

class "<OPENAPI>discriminator" as discriminator {
  <OPENAPI>**propertyName**: STRING
  <OPENAPI>**mapping**: mapping
}

class "<OPENAPI>mapping" as mapping {
  <OPENAPI>**{payloadValue}**: REF
}

class arraySchema {
  **items**: SCHEMA | REF
  {field} <ADVANCED>**prefixItems**: ( schema | $ref )[]
  <ADVANCED>**contains**: schema | $ref
  <ADVANCED>**minContains**: INTEGER
  <ADVANCED>**maxContains**: INTEGER
  **maxItems**: INTEGER
  **minItems**: INTEGER
  **uniqueItems**: BOOLEAN
}

class booleanSchema {
}

class nullSchema { 
}

legend
  **Legend**
  |<ROOT> **document root** |
  |<ABSTRACT> **abstract class**|
  |<ENUM> **enum**|
  | REF |
  | SCHEMA |
  | * **required**: property |
  | <ADVANCED>**advanced**: topic |
  | <OPENAPI>**openapi**: extension |
end legend

footer
<img:https://licensebuttons.net/l/by-sa/4.0/88x31.png>
Copyright 2023 Akamai Technologies, Inc. (David Fink)
openapi-class-model is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.
Based on a work at https://github.com/realfink/openapi-class-model
endfooter

rootSchema -d-|> objectSchema
ref .d.> schema
schema::type .r.> schemaType

stringSchema -u-|> schema
numericSchema -u-|> schema
integerSchema -u-|> numericSchema
numberSchema -u-|> numericSchema
objectSchema -r-|> schema
arraySchema -u-|> schema
booleanSchema -u-|> schema
nullSchema -u-|> schema

stringSchema::format .d.> formatType
objectSchema *-d- properties
objectSchema *-d- discriminator
discriminator *-d- mapping
integerSchema::format .d.> integerFormatType
numberSchema::format .d.> numberFormatType

@enduml